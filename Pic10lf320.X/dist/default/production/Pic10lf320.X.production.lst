

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon May 01 10:57:40 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	10F320
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	bitnvBANK0,global,bit,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC10F320 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0020                     	;# 
    86  0020                     	;# 
    87  0021                     	;# 
    88  0022                     	;# 
    89  0022                     	;# 
    90  0023                     	;# 
    91  0024                     	;# 
    92  0025                     	;# 
    93  0026                     	;# 
    94  0027                     	;# 
    95  0027                     	;# 
    96  0028                     	;# 
    97  0029                     	;# 
    98  002A                     	;# 
    99  002A                     	;# 
   100  002B                     	;# 
   101  002C                     	;# 
   102  002D                     	;# 
   103  002E                     	;# 
   104  0030                     	;# 
   105  0031                     	;# 
   106  0032                     	;# 
   107  0033                     	;# 
   108  0034                     	;# 
   109  0035                     	;# 
   110  0036                     	;# 
   111  0037                     	;# 
   112  0038                     	;# 
   113  0039                     	;# 
   114  003A                     	;# 
   115  003B                     	;# 
   116  003C                     	;# 
   117  003D                     	;# 
   118  003E                     	;# 
   119  003F                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0020                     	;# 
   155  0020                     	;# 
   156  0021                     	;# 
   157  0022                     	;# 
   158  0022                     	;# 
   159  0023                     	;# 
   160  0024                     	;# 
   161  0025                     	;# 
   162  0026                     	;# 
   163  0027                     	;# 
   164  0027                     	;# 
   165  0028                     	;# 
   166  0029                     	;# 
   167  002A                     	;# 
   168  002A                     	;# 
   169  002B                     	;# 
   170  002C                     	;# 
   171  002D                     	;# 
   172  002E                     	;# 
   173  0030                     	;# 
   174  0031                     	;# 
   175  0032                     	;# 
   176  0033                     	;# 
   177  0034                     	;# 
   178  0035                     	;# 
   179  0036                     	;# 
   180  0037                     	;# 
   181  0038                     	;# 
   182  0039                     	;# 
   183  003A                     	;# 
   184  003B                     	;# 
   185  003C                     	;# 
   186  003D                     	;# 
   187  003E                     	;# 
   188  003F                     	;# 
   189                           
   190                           	psect	nvBANK0
   191  004A                     __pnvBANK0:	
   192  004A                     _debounced_switch:	
   193  004A                     	ds	1
   194                           
   195                           	psect	bitnvBANK0
   196  0258                     __pbitnvBANK0:	
   197  0258                     _button_released:	
   198  0258                     	ds	1
   199  001C                     _IOCAFbits	set	28
   200  000B                     _INTCONbits	set	11
   201  001B                     _IOCANbits	set	27
   202  000D                     _PIE1bits	set	13
   203  0019                     _PWM2CONbits	set	25
   204  0013                     _T2CONbits	set	19
   205  000C                     _PIR1bits	set	12
   206  0017                     _PWM2DCL	set	23
   207  0018                     _PWM2DCH	set	24
   208  0012                     _PR2	set	18
   209  0019                     _PWM2CON	set	25
   210  0026                     _CLKRCONbits	set	38
   211  0010                     _OSCCONbits	set	16
   212  0005                     _PORTAbits	set	5
   213  0006                     _TRISAbits	set	6
   214  0008                     _ANSELAbits	set	8
   215                           
   216                           ; #config settings
   217  0000                     
   218                           	psect	cinit
   219  000F                     start_initialization:	
   220  000F                     __initialization:	
   221                           
   222                           ; Clear objects allocated to BANK0
   223  000F  01C8               	clrf	__pbssBANK0& (0+127)
   224  0010  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   225                           
   226                           ; Clear objects allocated to BITBANK0
   227  0011  01CC               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   228  0012                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231  0012                     __end_of__initialization:	
   232  0012  0183               	clrf	3
   233  0013  2814               	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	bssBANK0
   236  0048                     __pbssBANK0:	
   237  0048                     _sleep_timer:	
   238  0048                     	ds	2
   239                           
   240                           	psect	bitbssBANK0
   241  0260                     __pbitbssBANK0:	
   242  0260                     _light_on:	
   243  0260                     	ds	1
   244                           
   245                           	psect	cstackCOMMON
   246  0000                     __pcstackCOMMON:	
   247  0000                     ??_main:	
   248                           
   249                           	psect	cstackBANK0
   250  0040                     __pcstackBANK0:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0040                     ?_setup:	
   254  0040                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0040                     ?_isr:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0040                     ??_isr:	
   261                           ; 1 bytes @ 0x0
   262                           
   263                           
   264                           ; 1 bytes @ 0x0
   265  0040                     	ds	7
   266  0047                     ??_setup:	
   267                           
   268                           ; 1 bytes @ 0x7
   269  0047                     	ds	1
   270                           
   271                           	psect	maintext
   272  0014                     __pmaintext:	
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 89 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : B00/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0
   292 ;;      Params:         0       0
   293 ;;      Locals:         0       0
   294 ;;      Temps:          0       0
   295 ;;      Totals:         0       0
   296 ;;Total ram usage:        0 bytes
   297 ;; Hardware stack levels required when called:    2
   298 ;; This function calls:
   299 ;;		_setup
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           
   306                           ;psect for function _main
   307  0014                     _main:	
   308                           
   309                           ;main.c: 91: setup();
   310                           
   311                           ;incstack = 0
   312                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   313  0014  204C               	fcall	_setup
   314  0015  2835               	goto	l44
   315  0016                     l597:	
   316                           
   317                           ;main.c: 96: if((debounced_switch == 0x00) && button_released){
   318  0016  084A               	movf	_debounced_switch,w
   319  0017  1903               	btfsc	3,2
   320  0018  1C4B               	btfss	_button_released/(0+8),_button_released& (0+7)
   321  0019  282A               	goto	l615
   322                           
   323                           ;main.c: 97: if(PWM2DCH == 0xAF){
   324  001A  30AF               	movlw	175
   325  001B  0618               	xorwf	24,w	;volatile
   326  001C  1D03               	btfss	3,2
   327  001D  2820               	goto	l605
   328                           
   329                           ;main.c: 98: PWM2DCH = 0xBF;
   330  001E  30BF               	movlw	191
   331  001F  2825               	goto	L1
   332  0020                     l605:	
   333                           ;main.c: 99: }else if(PWM2DCH == 0xBF){
   334                           
   335  0020  30BF               	movlw	191
   336  0021  0618               	xorwf	24,w	;volatile
   337  0022  1D03               	btfss	3,2
   338  0023  2827               	goto	l609
   339                           
   340                           ;main.c: 100: PWM2DCH = 0xDF;
   341  0024  30DF               	movlw	223
   342  0025                     L1:	
   343  0025  0098               	movwf	24	;volatile
   344                           
   345                           ;main.c: 101: }else{
   346  0026  2834               	goto	l627
   347  0027                     l609:	
   348                           
   349                           ;main.c: 102: PWM2DCH = 0x00;
   350  0027  0198               	clrf	24	;volatile
   351                           
   352                           ;main.c: 103: light_on = 0;
   353  0028  104C               	bcf	_light_on/(0+8),_light_on& (0+7)
   354  0029  2834               	goto	l627
   355  002A                     l615:	
   356                           ;main.c: 106: }else if(debounced_switch == 0xFF){
   357                           
   358                           ;main.c: 104: }
   359                           ;main.c: 105: button_released = 0;
   360                           
   361  002A  0A4A               	incf	_debounced_switch,w
   362  002B  1D03               	btfss	3,2
   363  002C  2835               	goto	l44
   364                           
   365                           ;main.c: 107: button_released = 1;
   366  002D  144B               	bsf	_button_released/(0+8),_button_released& (0+7)
   367                           
   368                           ;main.c: 108: }
   369                           ;main.c: 109: }else{
   370  002E  2835               	goto	l44
   371  002F                     l621:	
   372  002F  1C4B               	btfss	_button_released/(0+8),_button_released& (0+7)
   373  0030  283B               	goto	l629
   374                           
   375                           ;main.c: 111: PWM2DCH = 0xAF;
   376  0031  30AF               	movlw	175
   377  0032  0098               	movwf	24	;volatile
   378                           
   379                           ;main.c: 112: light_on = 1;
   380  0033  144C               	bsf	_light_on/(0+8),_light_on& (0+7)
   381  0034                     l627:	
   382                           
   383                           ;main.c: 113: button_released = 0;
   384  0034  104B               	bcf	_button_released/(0+8),_button_released& (0+7)
   385  0035                     l44:	
   386                           ;main.c: 93: while(1){
   387                           
   388                           ;main.c: 114: }else if(debounced_switch == 0xFF){
   389                           
   390  0035  0064               	clrwdt	;# 
   391                           
   392                           ;main.c: 95: if(light_on){
   393  0036  184C               	btfsc	_light_on/(0+8),_light_on& (0+7)
   394  0037  2816               	goto	l597
   395                           
   396                           ;main.c: 110: if((debounced_switch == 0x00) && button_released){
   397  0038  084A               	movf	_debounced_switch,w
   398  0039  1903               	btfsc	3,2
   399  003A  282F               	goto	l621
   400  003B                     l629:	
   401  003B  0A4A               	incf	_debounced_switch,w
   402  003C  1D03               	btfss	3,2
   403  003D  2835               	goto	l44
   404                           
   405                           ;main.c: 115: button_released = 1;
   406  003E  144B               	bsf	_button_released/(0+8),_button_released& (0+7)
   407                           
   408                           ;main.c: 116: if(sleep_timer >= 4096){
   409  003F  0849               	movf	_sleep_timer+1,w
   410  0040  3A80               	xorlw	128
   411  0041  00FF               	movwf	127
   412  0042  3090               	movlw	144
   413  0043  027F               	subwf	127,w
   414  0044  1D03               	skipz
   415  0045  2848               	goto	u235
   416  0046  3000               	movlw	0
   417  0047  0248               	subwf	_sleep_timer,w
   418  0048                     u235:	
   419  0048  1C03               	skipc
   420  0049  2835               	goto	l44
   421  004A  0063               	sleep	;# 
   422  004B  2835               	goto	l44
   423  004C                     __end_of_main:	
   424                           ;main.c: 118: }
   425                           ;main.c: 119: }
   426                           ;main.c: 120: }
   427                           ;main.c: 121: }
   428                           ;main.c: 122: return;
   429                           
   430                           
   431                           	psect	text1
   432  004C                     __ptext1:	
   433 ;; *************** function _setup *****************
   434 ;; Defined at:
   435 ;;		line 46 in file "main.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, status,2, status,0
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0
   449 ;;      Params:         0       0
   450 ;;      Locals:         0       0
   451 ;;      Temps:          0       1
   452 ;;      Totals:         0       1
   453 ;;Total ram usage:        1 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; Hardware stack levels required when called:    1
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           
   464                           ;psect for function _setup
   465  004C                     _setup:	
   466                           
   467                           ;main.c: 48: ANSELAbits.ANSA0 = 0;
   468                           
   469                           ;incstack = 0
   470                           ; Regs used in _setup: [wreg+status,2+status,0]
   471  004C  1008               	bcf	8,0	;volatile
   472                           
   473                           ;main.c: 49: ANSELAbits.ANSA1 = 0;
   474  004D  1088               	bcf	8,1	;volatile
   475                           
   476                           ;main.c: 50: ANSELAbits.ANSA1 = 0;
   477  004E  1088               	bcf	8,1	;volatile
   478                           
   479                           ;main.c: 52: TRISAbits.TRISA0 = 1;
   480  004F  1406               	bsf	6,0	;volatile
   481                           
   482                           ;main.c: 54: TRISAbits.TRISA1 = 0;
   483  0050  1086               	bcf	6,1	;volatile
   484                           
   485                           ;main.c: 55: TRISAbits.TRISA2 = 0;
   486  0051  1106               	bcf	6,2	;volatile
   487                           
   488                           ;main.c: 57: PORTAbits.RA2 = 0;
   489  0052  1105               	bcf	5,2	;volatile
   490                           
   491                           ;main.c: 58: PORTAbits.RA1 = 0;
   492  0053  1085               	bcf	5,1	;volatile
   493                           
   494                           ;main.c: 60: OSCCONbits.IRCF = 0x05;
   495  0054  0810               	movf	16,w	;volatile
   496  0055  398F               	andlw	-113
   497  0056  3850               	iorlw	80
   498  0057  0090               	movwf	16	;volatile
   499                           
   500                           ;main.c: 61: CLKRCONbits.CLKROE = 1;
   501  0058  1726               	bsf	38,6	;volatile
   502                           
   503                           ;main.c: 63: PWM2CON = 0;
   504  0059  0199               	clrf	25	;volatile
   505                           
   506                           ;main.c: 65: PR2 = 0xF9;
   507  005A  30F9               	movlw	249
   508  005B  0092               	movwf	18	;volatile
   509                           
   510                           ;main.c: 67: PWM2DCH &= 0x00;
   511  005C  0198               	clrf	24	;volatile
   512                           
   513                           ;main.c: 68: PWM2DCL &= 0x00;
   514  005D  0197               	clrf	23	;volatile
   515                           
   516                           ;main.c: 70: PIR1bits.TMR2IF = 0;
   517  005E  108C               	bcf	12,1	;volatile
   518                           
   519                           ;main.c: 71: T2CONbits.T2CKPS = 0x00;
   520  005F  30FC               	movlw	-4
   521  0060  0593               	andwf	19,f	;volatile
   522                           
   523                           ;main.c: 72: T2CONbits.TMR2ON = 1;
   524  0061  1513               	bsf	19,2	;volatile
   525                           
   526                           ;main.c: 74: PWM2CONbits.PWM2EN = 1;
   527  0062  1799               	bsf	25,7	;volatile
   528                           
   529                           ;main.c: 75: PWM2CONbits.PWM2OE = 1;
   530  0063  1719               	bsf	25,6	;volatile
   531                           
   532                           ;main.c: 77: PIE1bits.TMR2IE = 1;
   533  0064  148D               	bsf	13,1	;volatile
   534                           
   535                           ;main.c: 78: IOCANbits.IOCAN0 = 1;
   536  0065  141B               	bsf	27,0	;volatile
   537                           
   538                           ;main.c: 80: INTCONbits.IOCIE = 1;
   539  0066  158B               	bsf	11,3	;volatile
   540                           
   541                           ;main.c: 81: INTCONbits.PEIE = 1;
   542  0067  170B               	bsf	11,6	;volatile
   543                           
   544                           ;main.c: 82: INTCONbits.GIE = 1;
   545  0068  178B               	bsf	11,7	;volatile
   546                           
   547                           ;main.c: 84: debounced_switch = 0xFF;
   548  0069  30FF               	movlw	255
   549  006A  00C7               	movwf	??_setup
   550  006B  0847               	movf	??_setup,w
   551  006C  00CA               	movwf	_debounced_switch
   552                           
   553                           ;main.c: 85: button_released = 1;
   554  006D  144B               	bsf	_button_released/(0+8),_button_released& (0+7)
   555                           
   556                           ;main.c: 86: light_on = 0;
   557  006E  104C               	bcf	_light_on/(0+8),_light_on& (0+7)
   558  006F  0008               	return
   559  0070                     __end_of_setup:	
   560                           
   561                           	psect	text2
   562  0070                     __ptext2:	
   563 ;; *************** function _isr *****************
   564 ;; Defined at:
   565 ;;		line 13 in file "isr.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0
   579 ;;      Params:         0       0
   580 ;;      Locals:         0       0
   581 ;;      Temps:          0       7
   582 ;;      Totals:         0       7
   583 ;;Total ram usage:        7 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		Interrupt level 1
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _isr
   594  0070                     _isr:	
   595                           
   596                           ;isr.c: 15: if (PIE1bits.TMR2IE && PIR1bits.TMR2IF)
   597  0070  188D               	btfsc	13,1	;volatile
   598  0071  1C8C               	btfss	12,1	;volatile
   599  0072  287E               	goto	i1l645
   600                           
   601                           ;isr.c: 16: {
   602                           ;isr.c: 17: PIR1bits.TMR2IF = 0;
   603  0073  108C               	bcf	12,1	;volatile
   604                           
   605                           ;isr.c: 18: debounced_switch = (debounced_switch << 1) | (0x01 & PORTAbits.RA0);
   606  0074  0805               	movf	5,w	;volatile
   607  0075  3901               	andlw	1
   608  0076  00C0               	movwf	??_isr
   609  0077  084A               	movf	_debounced_switch,w
   610  0078  00C1               	movwf	??_isr+1
   611  0079  0741               	addwf	??_isr+1,w
   612  007A  0440               	iorwf	??_isr,w
   613  007B  00C2               	movwf	??_isr+2
   614  007C  0842               	movf	??_isr+2,w
   615  007D  00CA               	movwf	_debounced_switch
   616  007E                     i1l645:	
   617                           
   618                           ;isr.c: 19: }
   619                           ;isr.c: 20: if (IOCAFbits.IOCAF0){
   620  007E  1C1C               	btfss	28,0	;volatile
   621  007F  2883               	goto	i1l651
   622                           
   623                           ;isr.c: 21: IOCAFbits.IOCAF0 = 0;
   624  0080  101C               	bcf	28,0	;volatile
   625                           
   626                           ;isr.c: 22: sleep_timer = 0;
   627  0081  01C8               	clrf	_sleep_timer
   628  0082  01C9               	clrf	_sleep_timer+1
   629  0083                     i1l651:	
   630                           
   631                           ;isr.c: 23: }
   632                           ;isr.c: 24: sleep_timer++;
   633  0083  3001               	movlw	1
   634  0084  07C8               	addwf	_sleep_timer,f
   635  0085  1803               	skipnc
   636  0086  0AC9               	incf	_sleep_timer+1,f
   637  0087  3000               	movlw	0
   638  0088  07C9               	addwf	_sleep_timer+1,f
   639  0089  0846               	movf	??_isr+6,w
   640  008A  00FF               	movwf	127
   641  008B  0845               	movf	??_isr+5,w
   642  008C  008A               	movwf	10
   643  008D  0844               	movf	??_isr+4,w
   644  008E  0084               	movwf	4
   645  008F  0E43               	swapf	(??_isr+3)^0,w
   646  0090  0083               	movwf	3
   647  0091  0EFE               	swapf	126,f
   648  0092  0E7E               	swapf	126,w
   649  0093  0009               	retfie
   650  0094                     __end_of_isr:	
   651  007E                     btemp	set	126	;btemp
   652  007E                     wtemp0	set	126
   653                           
   654                           	psect	intentry
   655  0004                     __pintentry:	
   656                           ;incstack = 0
   657                           ; Regs used in _isr: [wreg+status,2+status,0]
   658                           
   659  0004                     interrupt_function:	
   660  007E                     saved_w	set	btemp
   661  0004  00FE               	movwf	btemp
   662  0005  0E03               	swapf	3,w
   663  0006  00C3               	movwf	??_isr+3
   664  0007  0804               	movf	4,w
   665  0008  00C4               	movwf	??_isr+4
   666  0009  080A               	movf	10,w
   667  000A  00C5               	movwf	??_isr+5
   668  000B  087F               	movf	btemp+1,w
   669  000C  00C6               	movwf	??_isr+6
   670  000D  2870               	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      8      13

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              7 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  7     7      0       0
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               3E      8       D       3       21.0%
ABS                  0      0       D       4        0.0%
DATA                 0      0       D       5        0.0%
BITBANK0            3E      0       2       6        3.2%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon May 01 10:57:40 2017

            __CFG_CP$OFF 0000                       l44 0035              __CFG_LVP$ON 0000  
                    l621 002F                      l605 0020                      l615 002A  
                    l609 0027                      l627 0034                      l629 003B  
                    l597 0016                      u235 0048                      _PR2 0012  
                    _isr 0070                      fsr0 0004             __CFG_BORV$LO 0000  
                   ?_isr 0040             __CFG_WRT$OFF 0000                     _main 0014  
                   btemp 007E                     start 000E            __CFG_MCLRE$ON 0000  
          __CFG_LPBOR$ON 0000                    ??_isr 0040                    ?_main 0040  
                  i1l651 0083                    i1l645 007E                    _setup 004C  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 004C                   ??_main 0000  
                 ?_setup 0040           __CFG_PWRTE$OFF 0000                   saved_w 007E  
__end_of__initialization 0012           __pcstackCOMMON 0000             __pbitnvBANK0 0258  
          __end_of_setup 0070          _button_released 0258                  ??_setup 0047  
             __pbssBANK0 0048               __pmaintext 0014               __pintentry 0004  
                _PWM2DCH 0018                  _PWM2DCL 0017                  _PWM2CON 0019  
                __ptext1 004C                  __ptext2 0070                _T2CONbits 0013  
           __size_of_isr 0024                _IOCAFbits 001C                _IOCANbits 001B  
   end_of_initialization 0012                _PORTAbits 0005         __CFG_FOSC$INTOSC 0000  
              _TRISAbits 0006            __pbitbssBANK0 0260      start_initialization 000F  
            __end_of_isr 0094                ___latbits 0000            __pcstackBANK0 0040  
            _CLKRCONbits 0026                __pnvBANK0 004A         __CFG_WDTE$NSLEEP 0000  
         __size_of_setup 0024        interrupt_function 0004                 _PIE1bits 000D  
               _PIR1bits 000C         _debounced_switch 004A               _ANSELAbits 0008  
               _light_on 0260            __size_of_main 0038               _INTCONbits 000B  
            _PWM2CONbits 0019        __CFG_BOREN$NSLEEP 0000                 intlevel1 0000  
             _OSCCONbits 0010              _sleep_timer 0048  
